{"CarryMinati-Tweets-Analysis": {"repo_topics": ["python", "tweepy-api", "nlp", "wordcloud", "project"], "repo_description": "This notebook pulls 2000 tweets from twitter into a json file and then after preprocessing, a word cloud is generated.", "repo_stars": 1, "repo_forks": 0}, "CodeBoi-Django-Blog": {"repo_topics": ["django", "python", "project"], "repo_description": "This is a coding related blog where users can create their profile. publish articles and discuss them in the comments thread.", "repo_stars": 1, "repo_forks": 0}, "Coronavirus_Notifier": {"repo_topics": ["python", "plyer", "beautifulsoup", "project"], "repo_description": "This script basically notifies coronavirus stats of different states at fixed intervals of time", "repo_stars": 1, "repo_forks": 0}, "Data-Analysis-Hub": {"repo_topics": ["data-science", "data-analysis", "pandas", "matplotlib", "seaborn", "kaggle", "google-play-store", "project"], "repo_description": "This is where all my Data Analysis notebooks are present. All the notebooks are either fully explored and have an explanatory readme or a medium article has been published which is linked in the README. ", "repo_stars": 1, "repo_forks": 0}, "FirstPyGame": {"repo_topics": ["python", "pygame", "project"], "repo_description": "I build this game using the Pygame library. The player box has to save itself from the enemy block and according to the number of blocks saved, scoring is done live. There is a sweet background sound of the game Mario and whenever player box hits the enemy box, a 'ting' sound is played.", "repo_stars": 1, "repo_forks": 0}, "FlaskWebsite": {"repo_topics": ["flask", "flask-sqlalchemy", "python", "flask-mail", "sqlite", "html", "css", "jinja2-templates", "project"], "repo_description": "This is a blogging website build with Python as backend, popular frontend technologies, and production database.", "repo_stars": 1, "repo_forks": 0}, "IPUResultAndroidApp": {"repo_topics": ["python", "kivymd", "rest-api", "kivy", "buildozer", "android", "jwt-authentication", "project"], "repo_description": "This is the extension to my IPU results website. This app will fetch data from the website's own REST API and then display it on the screen. ", "repo_stars": 1, "repo_forks": 1}, "PyWebScarp": {"repo_topics": ["beautifulsoup", "python", "project"], "repo_description": "Using BeautifulSoup, I scraped Flipkart and stored the result of the phone details in a CSV file.", "repo_stars": 1, "repo_forks": 0}, "Technocolab-Final-Project": {"repo_topics": ["python", "numpy", "pandas", "seaborn", "sklearn", "flask", "html", "css", "project"], "repo_description": "This repository contains the final project of the Technocolabs internship. This is the final project made during my internship in Technocolabs. In this project, we were given two files, a CSV file containing data about music track title, composer, label, and many other features including track genre. The JSON file consists of techincal details about a soundtrack including valence and danceability.", "repo_stars": 1, "repo_forks": 0}, "TelegramBot-IPU": {"repo_topics": ["telegram-bot-api", "python", "heroku", "rest-api", "jwt-authentication", "project"], "repo_description": "This is the extension to my IPU results website. This app fetches data from the website's own REST API and then processes the jsonified output of the API to be sent to the telegram bot via the Telegram's own webhook. Currently, its deployed to Heroku as worker dyno which almost works 24/7. ", "repo_stars": 1, "repo_forks": 0}, "Whatsapp_Automation": {"repo_topics": ["python", "selenium-webdriver", "project"], "repo_description": "This script automatically sends messages. Text, audio, images or videos all are supported. Currently working to make it a whole application", "repo_stars": 2, "repo_forks": 1}}